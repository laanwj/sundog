# Copyright (c) 2017 Wladimir J. van der Laan
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

##### SunDog/Atari ST specific procedure numbers
# if tuple: name, ins, outs
APPCALLS = {
    # Game main and initialization
    b'SUNDOG  ': {
        0x01: 'sundog()',
        0x02: 'dispatcher(a)',
        0x03: 'do_ship',
        0x04: 'do_ground', # Dispatch to moveonground/moveinbuilding/etc
    },
    b'XSTARTUP': { # Initialization / start up menu / librarian
        0x01: 'xstart_up',
        0x02: 'set_palette',
        0x03: 'init_gem(a,b,c)',   # Sets up pointers to graphics
        0x04: 'init_gem:set_tile_rec',
        0x05: 'init_gem:make_vdi',
        0x06: 'link_sbios',
        0x07: 'init_vars',
        0x08: 'request_sundog',
        0x09: 'save_game',
        0x0a: 'load_game(a,b)',  # Loads list of systems, planets and cities
        0x0b: 'load_gcheck',
        0x0c: 'change_deaths',
        0x0d: 'show_score',
        0x0e: 'show_score:vnumln',
        0x0f: 'load_database',
        0x10: 'utility',
        0x11: 'utility:show_header',
        0x12: 'utility:show_game',
        0x13: 'utility:show_game:show_personal_status',
        0x14: 'utility:util_menu',
        0x15: 'utility:init_display',
        0x16: 'utility:verified',
        0x17: 'utility:request_sun_dog',
        0x18: 'utility:clear_game',
        0x19: 'utility:library',
        0x1a: 'utility:library:save_index',
        0x1b: 'utility:library:warning',
        0x1c: 'utility:library:zero_game',
        0x1d: 'utility:library:make_library',
        0x1e: 'utility:library:make_library:format_disk',
        0x1f: 'utility:library:open_library',
        0x20: 'utility:library:load_lib_game',
        0x21: 'utility:library:load_lib_game:custom_read_menu',
        0x22: 'utility:library:load_lib_game:custom_read_menu:min',
        0x23: 'utility:library:load_lib_game:custom_read_menu:scroll',
        0x24: 'utility:library:store_game',
        0x25: 'utility:set_new_game',
        0x26: 'utility:set_new_game:init_systems',
        0x27: 'utility:set_new_game:init_systems:set_random',
        0x28: 'utility:set_new_game:init_systems:no_overlap',
        0x29: 'utility:set_new_game:init_planets',
        0x2a: 'utility:set_new_game:init_trade',
        0x2b: 'utility:set_new_game:init_trade:setmat',
        0x2c: 'utility:set_new_game:init_trade:set_city_sd',
        0x2d: 'utility:set_new_game:place_colony',
        0x2e: 'utility:set_new_game:init_data_base',
        0x2f: 'utility:set_new_game:init_location',
        0x30: 'utility:set_new_game:new_game',
        0x31: 'utility:set_new_game:new_game:sys',
        0x32: 'utility:set_new_game:new_game:set_up_lockers',
        0x33: 'utility:set_attributes',
        0x34: 'utility:set_attributes:show_attribute',
        0x35: 'utility:set_attributes:show_points',
        0x36: 'utility:set_attributes:initialize',
        0x37: 'utility:set_attributes:cleanup',
        0x38: 'utility:set_attributes:point_value',
        0x39: 'utility:set_attributes:get_fndx',
        0x3a: 'utility:set_attributes:adjust_attribute',
        0x3b: 'utility:set_attributes:check_done',
        0x3c: 'utility:select_name',
        0x3d: 'utility:select_name:set_keys',
        0x3e: 'utility:select_name:initialize',
        0x3f: 'utility:select_name:vshift',
        0x40: 'utility:select_name:vback',
        0x41: 'utility:select_name:vtype',
        0x42: 'utility:select_name:vquit',
        0x43: 'utility:select_name:write_messages',
        0x44: 'utility:select_name:cleanup',
        0x45: 'utility:start_new_game',
        0x46: 'sign_on',
        0x47: 'sign_on:show_credits',
        0x48: 'sign_on:init_screen',
        0x49: 'end_game',
        0x4a: 'end_game:completion',
        0x4b: 'end_game:completion:flash',
        0x4c: 'end_game:completion:prntpic',
        0x4d: 'end_game:add_reason',
    },
    b'DONESOFA': { # DONESOFAR
        0x01: 'done_so_far',
        0x02: 'start_up(flag)',
        0x03: 'do_interaction(a,b,c)',
        0x04: 'wipe_title_page',
    },
    # Game actions
    b'SHIPLIB ': {
        0x02: 'do_user_menu',
        0x03: 'pilotage',
        0x04: 'read_map',
        0x05: 'do_repairs(a,b,c)',
        0x06: 'land_fx',
        0x07: 'show_move',
        0x08: 'move_on_ship',
        0x09: 'do_fight',
        0x0a: 'dist',
        0x0b: 'init_plan',
        0x0c: 'polar_to_rect',
        0x0d: 'change_stat',
        0x0e: 'update_system',
        0x0f: 'running_lights',
        0x10: 'whoosh_whoosh_lights', # VDI 129/32
        0x11: 'bay_lights',
        0x12: 'update_ship',
        0x13: 'add_time',
        0x14: 'set_time',
        0x15: 'expired',
        0x16: ('stars()', 0, 0), # This draws the viewscreen background
        0x17: 'set_stars', # Randomize 256 bytes (star positions)
        0x18: ('explosion()', 0, 0), # Handle bogeys (enemy ship movement) in space fight
        0x19: ('laser_fx(x)', 1, 0),
        0x1a: ('wowzo(a,b,c,vdihandle)', 4, 0),
        # Internal functions
        0x1b: 'whoosh_whoosh_lights:light',
        0x1c: 'whoosh_whoosh_lights:light:fill_light',
        0x1d: 'retreat',
        0x1e: 'set_course',
        0x1f: 'update_movement',
        0x20: 'set_fire',
        0x21: 'update_attack',
        0x22: 'cond_level',
        0x23: 'update_levels',
        0x24: 'update_levels:check_fuel',
        0x25: 'update_levels:modify_level',
    },
    b'GRNDLIB ': {
        0x02: 'do_combat(a,b,c)',
        0x03: 'move_on_ground(a,b,c,d,e,f)',
        0x04: 'do_uniteller(a)',
        0x05: 'do_trading(a)',
        0x06: 'move_in_building(a,b,c,d)',
        0x07: 'slots()',
    },
    b'XDOCOMBA': {
        0x01: 'xdo_combat',
        0x02: 'draw_dead_man',
        0x03: 'remove_person',
        0x04: 'remove_player',
        0x05: 'check_shield',
        0x06: 'check_guns',
        0x07: 'set_point',
        0x08: 'init_people',
        0x09: 'init_arena',
        0x0a: 'initialize',
        0x0b: 'cleanup',
        0x0c: 'find_victim',
        0x0d: 'its_ahit',
        0x0e: 'fire_gun',
        0x0f: 'bring_up_window',
        0x10: 'handle_player',
        0x11: 'handle_thugs',
        0x12: 'handle_thugs:move_guy',
    },
    b'XMOVEONG': {
        0x01: 'xmove_on_ground',
        0x02: 'diff',
        0x03: 'read_chars',
        0x04: 'read_chars:checkset',
        0x05: 'read_chars:check_pool_set',
        0x06: 'end_movement',
        0x07: 'put_ship',
        0x08: 'place_pod',
        0x09: 'blink_pod',
        0x0a: 'blink_pod:pod_on_screen',
        0x0b: 'wmap',
        0x0c: 'wmap:park_pods',
        0x0d: 'wmap:scroll_up',
        0x0e: 'wmap:scroll_left',
        0x0f: 'wmap:scroll_down',
        0x10: 'wmap:scroll_right',
        0x11: 'draw_map',
        0x12: 'redraw_map',
        0x13: 'exit_to_world',
        0x14: 'update_position',
        0x15: 'get_position',
        0x16: 'within',
        0x17: 're_enter_ship',
        0x18: 'get_marks',
        0x19: 're_enter_pod',
        0x1a: 're_enter_pod:in_street',
        0x1b: 're_enter_pod:scroll_message',
        0x1c: 'get_clim',
        0x1d: 'enter_city',
        0x1e: 'check_building',
        0x1f: 'check_building:check_loc',
        0x20: 'check_exit',
        0x21: 'place_person',
        0x22: 'draw_city_map',
        0x23: 'init_city',
        0x24: 'draw_world_map',
        0x25: 'draw_world_map:unpack_map',
        0x26: 'draw_world_map:unpack_map:stuff',
        0x27: 'init_world',
        0x28: 'init_movement',
        0x29: 'init_movement:set_parking',
        0x2a: 'init_movement:mark_loc',
        0x2b: 'handle_teleport',
        0x2c: 'handle_teleport:tele_effect',
        0x2d: 'handle_teleport:tele_effect:set_square',
        0x2e: 'handle_teleport:tele_map',
        0x2f: 'handle_teleport:tele_map:print_build',
        0x30: 'handle_teleport:choose_jump',
        0x31: 'handle_teleport:do_jump',
        0x32: 'handle_teleport:enough_money',
        0x33: 'little_window',
        0x34: 'little_window:set_itype',
        0x35: 'little_window:set_itype:which',
        0x36: 'little_window:set_itype:confirm',
        0x37: 'pop_user_menu',
    },
    b'XDOUNITE': {
        0x01: 'xdo_uniteller',
        0x02: 'get_cash',
        0x03: 'put_cash_away',
        0x04: 'get_name',
        0x05: 'pick_location',
        0x06: 'set_marquee',
        0x07: 'no_funds_message',
        0x08: 'do_tube_station',
        0x09: 'do_tube_station:move_it',
        0x0a: 'do_tube_station:move_it:put_name',
        0x0b: 'do_teller',
        0x0c: 'do_teller:move_cash',
        0x0d: 'do_teller:do_transfer',
        0x0e: 'do_teller:pay_fine',
        0x0f: 'do_depot',
        0x10: 'do_depot:select_purchase',
        0x11: 'do_depot:select_purchase:put_values',
        0x12: 'do_depot:refuel_ship',
        0x13: 'do_depot:repair_ship',
        0x14: 'do_depot:repair_ship:factor',
        0x15: 'do_depot:repair_ship:factor:tfact',
        0x16: 'do_depot:buy_aux_fuel',
        0x17: 'do_depot:engineering',
    },
    b'XDOTRADI': {
        0x01: 'xdo_trading',
        0x02: 'xgotoxy',
        0x03: 'do_menu',
        0x04: 'clear_line',
        0x05: 'put_money',
        0x06: 'set_demand',
        0x07: 'get_data',
        0x08: 'get_data:adjust',
        0x09: 'get_data:init_sd',
        0x0a: 'put_data',
        0x0b: 'do_row',
        0x0c: 'light_box',
        0x0d: 'find_space',
        0x0e: 'clear_display',
        0x0f: 'pick_item',
        0x10: 'do_warehouse',
        0x11: 'do_warehouse:show_warehouse',
        0x12: 'current_price',
        0x13: 'current_price:factor',
        0x14: 'current_price:factor:tfact',
        0x15: 'current_price:find_location',
        0x16: 'update_market',
        0x17: 'add_quote',
        0x18: 'add_quote:in_bids',
        0x19: 'goods_info',
        0x1a: 'move_goods',
        0x1b: 'do_selling',
        0x1c: 'enough_room',
        0x1d: 'do_buying',
        0x1e: 'do_exchange',
        0x1f: 'do_exchange:update_quote',
        0x20: 'do_exchange:pick_option',
        0x21: 'do_exchange:set_up_box',
        0x22: 'init_trade',
    },
    b'XDOREPAI': { # XDOREPAIR (ship repair)
        0x01: 'xdo_repairs',
        0x02: 'init_repairs',
        0x03: 'show_system',
        0x04: 'show_function',
        0x05: 'show_contents',     # Loads cargo info from disk, shows cargo
        0x06: 'init_system',
        0x07: 'syscheck',
        0x08: 'update_status',
        0x09: 'update_status:blast_component',
        0x0a: 'fits',
        0x0b: 'move_item',
    },
    b'XLANDFX ': {
        0x01: 'xland_fx',
        0x02: 'init_city',
        0x03: 'init_lines',
        0x04: 'd_line',
        0x05: 'c_line',
        0x06: 'do_stars',
        0x07: 'dhor',
        0x08: 'dbldngs',
        0x09: 'stg7a',
        0x0a: 'stage1z',
        0x0b: 'do_landing',
        0x0c: 'city_up',
        0x0d: 'do_take_off',
        0x0e: 'do_city',
    },
    b'XSHOWMOV': {
        0x01: 'xshow_move',
        0x02: 'log_flight_plan',
        0x03: 'stop_sproc',
        0x04: 'put_err',
        0x05: 'put_err:set_msg',
        0x06: 'start_jump',
        0x07: 'start_jump:shut_down',
        0x08: 'cancel_jump',
        0x09: 'do_jump',
        0x0a: 'do_in_system',
        0x0b: 'do_in_system:set_name',
        0x0c: 'stop_in_sys',
        0x0d: 'do_on_world',
        0x0e: 'do_on_world:set_name',
    },
    b'XDOUSERM': { # XDOUSERMENU
        0x01: 'xdo_user_menu',
        0x02: 'user_header',
        0x03: 'show_personal_status',    # Draws stat bars for vigor, rest, health, noursh
        0x04: 'update_status',
        0x05: 'update_status:quick_fix',
        0x06: 'wait_release',            # Loop until mouse button or MAINLIB+0x03 flag set
        0x07: 'init_status',
        0x08: 'initialize',
        0x09: 'pick_up_item',
        0x0a: 'move_item',
        0x0b: 'show_time',
        0x0c: 'show_cash',
        0x0d: 'show_stats',
        0x0e: 'show_location',           # Current city/plane
        0x0f: 'check_quit',
        0x10: 'go_to_sleep',
        0x11: 'cleanup',
    },
    b'XMOVEINB': { # XMOVEINBUILDING
        0x01: 'xmove_in_building',
        0x02: 'handle_bartender',
        0x03: 'in_counter',
        0x04: 'booth_index',
        0x05: 'room_index',
        0x06: 'clear_booth',
        0x07: 'remove_person',
        0x08: 'remove_person:cur_update',
        0x09: 'find_booth',
        0x0a: 'find_counter',
        0x0b: 'find_slots',
        0x0c: 'move_around',
        0x0d: 'leave_building',
        0x0e: 'update_position',
        0x0f: 'create_person',
        0x10: 'init_people',
        0x11: 'change_door',
        0x12: 'get_building',
        0x13: 'create_rooms',
        0x14: 'init_building',
        0x15: 'initialize',
        0x16: 'cleanup',
        0x17: 'bring_up_window',
        0x18: 'update_booths',
        0x19: 'update_doors',
        0x1a: 'do_slots',
        0x1b: 'handle_player',
        0x1c: 'handle_customers',
    },
    b'XSLOTS  ': {
        0x01: 'xslots',
        0x02: 'slot_coords',
        0x03: 'face_coords',
        0x04: 'draw_face',
        0x05: 'init_roll',
        0x06: 'roll_face',
        0x07: 'init_slots',
        0x08: 'init_slots:set_odds',
        0x09: 'get_button',
        0x0a: 'get_pay',
        0x0b: 'roll_one',
        0x0c: 'roll_slots',
        0x0d: 'roll_slots:set_match',
    },
    b'XMOVEONS': { # XMOVEONSHIP
        0x01: 'xmove_on_ship',
        0x02: 'show_stat',
        0x03: 'pilot_disp',
        0x04: 'handle_airlock',
        0x05: 'handle_pod',
        0x06: 'ship_disp',
        0x07: 'check_planets',
        0x08: 'check_fuel',
        0x09: 'init_ship',
        0x0a: 'get_location',
        0x0b: 'leave_ship',
        0x0c: 'check_enc',
    },
    b'XDOFIGHT': {
        0x01: 'xdo_fight',
        0x02: 'target_update',
        0x03: 'show_status',
        0x04: 'set_up_status',
        0x05: 'handle_destruction',
        0x06: 'fire_it',
        0x07: 'plot_dot',
        0x08: 'init_fight',
        0x09: 'fire_at_us',
        0x0a: 'replot_screen',
        0x0b: 'slew',
        0x0c: 'update_fight',  # Get mouse button state, if pressed, fire weapon, handle shooting
        0x0d: 'tact_wait',
        0x0e: 'push_down',
        0x0f: 'pop_up',
        0x10: 'build_menu',
        0x11: 'build_menu:light_up',
        0x12: 'do_guns',
        0x13: 'do_tractor',
        0x14: 'do_tractor:report',
        0x15: 'change_levels',
        0x16: 'set_new_menu',
        0x17: 'do_jettison',
        0x18: 'do_comm',
    },
    b'XPILOTAG': { # XPILOTAGE
        0x01: 'xpilotage',
        0x02: 'push_down',
        0x03: 'pop_up',
        0x04: 'read_loc',
        0x05: 'do_maps',
        0x06: 'do_move',
        0x07: 'do_move:build_menu',  # Only called if another menu appeared in the meantime
        0x08: 'do_move:quick_read',
        0x09: 'damaged',
        0x0a: 'build_menu',
        0x0b: 'do_distress',
    },
    b'XREADMAP': {
        0x01: 'xread_map',
        0x02: 'disp_map',
        0x03: 'disp_map:dispsect',
        0x04: 'disp_map:dispsect:stuff_line',
        0x05: 'disp_map:disp_system',
        0x06: 'disp_map:disp_planet',
        0x07: 'disp_map:disp_planet:change_xy',
        0x08: 'get_dest',
        0x09: 'get_dest:read_loc',
        0x0a: 'get_dest:read_loc:descsystem',
        0x0b: 'get_dest:read_loc:descplanet',
        0x0c: 'get_dest:read_loc:descplanet:desc_point',
        0x0d: 'get_dest:read_loc:desccity',
        0x0e: 'get_dest:do_sectmap',
        0x0f: 'get_dest:dosysmap',
        0x10: 'get_dest:doplanmap',
    },
    b'XDOINTER': { # XDOINTERACTION
        0x01: 'xdo_interaction(a,b,c)',
        0x02: 'set_up_price',
        0x03: 'new_desc',
        0x04: 'create_list',
        0x05: 'create_list:create_object',
        0x06: 'passed',
        0x07: 'passed:made_roll',
        0x08: 'passed:made_attr',
        0x09: 'set_up_item',
        0x0a: 'get_adr(x):integer', # Get offset for string x
        0x0b: 'get_token(x,y,addr)', # Copy string x (alt y if y>=0) to addr
        0x0c: 'get_token:get_offset(y,base,len)',
        0x0d: 'get_token:set_ch()', # Map character 0x5c/0x7c to 'I', and capitals to lower-case letters
        0x0e: 'yank(addr)',
        0x0f: 'get_place',
        0x10: 'put_message(i)', # Process string at offset i*2: substitute other strings
        0x11: 'put_message:replace(x)', # Process string *x*: outer
        0x12: 'put_message:send_message',
        0x13: 'put_message:add_char(x)',
        0x14: 'put_message:append(addr,?,?)',
        0x15: 'put_message:replace:aptok',
        0x16: 'set_frame(addr)',
        0x17: 'set_frame:pick_one',
        0x18: 'set_frame:pick_one:setup',
        0x19: 'set_frame:handle_precode',
        0x1a: 'set_frame:set_button',
        0x1b: 'set_frame:call_postcode',
        0x1c: 'set_frame:get_alternate',
        0x1d: 'create_tbreak(a,b,c)',
        0x1e: 'get_bribe',
        0x1f: 'new_frame(x)', # Load misc dialog words/"code"
        0x20: 'new_frame:fixed_frame',
        0x21: 'new_frame:set_local_tokens',
        0x22: 'new_frame:check_sects(addr,block)',
        0x23: 'read_frame',
        0x24: 'initialize()',  # Load main dialog words
        0x25: 'initialize:set_avail',
        0x26: 'initialize:start_interaction',
        0x27: 'move_item',
        0x28: 'move_item:item_check',
        0x29: 'move_item:handle_consumption',
        0x2a: 'move_item:set_down',
        0x2b: 'show_cash',
        0x2c: 'cleanup',
        0x2d: 'part_ok',
    },
    # Utilities
    b'MAINLIB ': {
        0x02: 'button_release',  # Wait until no mouse buttons pressed
        0x03: 'fore_sound',
        0x04: 'back_sound',
        0x05: 'quit',  # Fatal error ("red screen of death")
        0x06: 'color_value(r,g,b):integer',
        0x07: 'iand(a,b):integer', # Logical AND
        0x08: 'sign(x):integer', # Sign function: -1 if x<0, x if x==0, 1 if x>0
        0x09: 'isqrt',
        0x0a: 'condition(x;pval:^integer;y)', # *pval=min(max(*pval,x),y)
        0x0b: 'random():integer',
        0x0c: 'rand(low,high):integer',
        0x0d: 'set_money(addrout,?,value)',
        0x0e: 'more(addra,addrb):integer', # addra[0]>addrb[0] || (addra[0]==addrb[0] && addra[1]>addrb[1])
        0x0f: 'add(addra,addrb)', # Some 32-bit operation on two arguments
        0x10: 'sub(addra,addrb)', # Some 32-bit operation on two arguments (calls 0x0f)
        0x11: 'game_score():integer',
        0x12: 'get_checksum',           # Simple checksum
        0x13: 'decrypt(_,stride,_,_,addr,count,key)', # Sum then deobfuscate data
        0x14: 'encrypt(_,stride,_,_,addr,count,key)',   # Obfuscate data and sum
        0x15: 'str',
        0x16: 'vclear',
        0x17: 'vline',
        0x18: 'vgotoxy',
        0x19: 'moveto',
        0x1a: 'vchar',
        0x1b: 'vstring',
        0x1c: 'vcenter',
        0x1d: 'vnum',
        0x1e: 'wnum', # uses different print function
        0x1f: 'str_money(a,b,c)',
        0x20: 'vmoney(amountptr)',
        0x21: 'vinit(x)',  # Not sure what this actually sets
        0x22: 'draw_vinit',
        0x23: 'verasEOL',
        0x24: 'put_time(a,b,c,d,e)',
        0x25: 'tick_less',
        0x26: 'add_ticks',
        0x27: 'set_timeout',
        0x28: 'timeout',
        0x29: 'set_update',
        0x2a: 'need_update',
        0x2b: 'delay',
        0x2c: 'delay_button',  # Wait for mouse click or other event
        0x2d: 'freeze_time',   # Conditional wait on semaphore MAINLIB+0xa74
        0x2e: 'melt_time', # Conditional signal on semaphore MAINLIB+0xa74
        0x2f: 'backgnd_int',
        0x30: 'start_backgnd',
        0x31: 'stop_backgnd',
        0x32: 'title_color',
        0x33: 'util_color', # Do nothing
        0x34: 'copy_check', # Possibly set state so that RSOD appears
        0x35: 'the_time',
        0x36: 'screen_pos',
        0x37: 'color_win(color,n)', # Fill layout rectangle n with color
        0x38: 'color_rect(color,x0,y0,x1,y1)',
        0x39: 'invert_win',
        0x3a: 'invert_rect',
        0x3b: 'set_window',
        0x3c: 'get_window',
        0x3d: 'center(a,b,c)', # Called from PrintLn
        0x3e: 'draw_outline',
        0x3f: 'in_r_window',
        0x40: 'draw_poly',
        0x41: 'paddress',
        0x42: 'allocate',
        0x43: 'deallocate',
        0x44: 'error',
        0x45: 'disk_error', # Return 1 if error, 0 otherwise
        0x46: 'disk_in', # Read block 0x3a or 0x06 to see if library/sundog disk is in the drive as expected
        0x47: 'get_disk',  # Ask for a either library or sundog disk to be put in drive
        0x48: 'check_SBIOS',
        0x49: 'moveblock(?,lenwordsmin1,?,addr,count,block,?)', # Seems a general function for disk I/O
        0x4a: 'check_track', # Read an entire track, compute checksum?
        0x4b: 'fetch_epic(a,b,c,d,e)', # Load image resource?
        0x4c: 'fetch_at(a,b,c,addr_ptr)', # Load image resource?
        0x4d: 'fetch_dpic(addr_ptr,idx)', # Load image resource? idx 0x00..0x57
        # Internal functions
        0x4e: 'vstring:out_string',
        0x4f: 'str_num',
        0x50: 'put_time:make_str', # local function of DrawTime
        0x51: 'add:msign', # (addra[0]<0 || addra[1]<0)?-1:1
        0x52: 'the_time:update_condition', # gets passed an index and a 4-byte array
        0x53: 'find_pool_block',
        0x54: 'moveblock:do_track_check',
    },
    b'WINDOWLI': {
        0x02: 'add_item',
        0x03: 'put_items',
        0x04: 'swap_items',
        0x05: 'find_item(x,y,a,b)', # Mouse pressed
        0x06: 'put_desc',
        0x07: 'desc_item', # Show item name
        0x08: 'remove_item',
        0x09: 'set_mark',
        0x0a: 'put_pocket',
        0x0b: 'clear_slot',
        0x0c: 'clear_menu',
        0x0d: 'add_char',
        0x0e: 'swap_menu',
        0x0f: 'put_menu',
        0x10: 'find_menu(i,x,y)', # Frequently called while mouse is clicked at position x,y
        0x11: 'confirm_menu',
        0x12: 'read_menu',
        0x13: 'new_menu(x)',
        0x14: 'set_box(i,text:string)',
        0x15: 'make_zoom(a,b,c)',
        0x16: 'pop_zoom',
        # Internal functions
        0x17: 'remove_item:apply_object',
        0x18: 'remove_item:apply_object:set_cond',
        0x19: 'put_box',
        0x1a: 'draw_man',
        0x1b: 'draw_zoom',
        0x1c: 'draw_zoom:pick_pic',
        0x1d: 'make_zoom:make_man',
    },
    # Bindings
    b'GEMBIND ': {
        0x02: ('call_VDI(handle,opcode,numptsin,numintin)', 4, 0),
        0x03: ('call_AES(a,b,c,d,e,f)', 6, 0),
        0x04: ('moveram(from,to,bytes)', 3, 0), # Some memory copy function
        0x05: ('laddress(ptr,dst)', 2, 0),
        0x06: ('set_screen(x)', 1, 0), # Unused
        0x07: ('decode(addr1,addr2,val1,val2)', 4, 0),  # decode image
        0x08: ('do_sound(x)', 1, 0),
        0x09: ('SBIOS_sum', 3, 1), # Unused
        0x0a: ('format_track(a,b,c,d,e,f,g,h,i)', 9, 0),
        0x0b: ('set_color(color,index)', 2, 0),
        0x0c: 'address', # Unused
        0x0d: ('scroll(amount,direction)', 2, 0),
        0x0e: 'graf_mouse',
        0x0f: 'view_port',
        0x10: 'poly_line(numptsin)',
        0x11: 'line',  # One line
        0x12: 'wstring',  # Draw ASCII text
        0x13: 'wchar(ch,x,y)',  # Wrapper over 0x1d
        0x14: 'fill_rect',
        0x15: 'ell_arc(begang,endang,x,y,xradius,yradius)', # VDI 11, subfunction 6
        0x16: 'draw_mode', # VDI 32
        0x17: 'line_width', # VDI 16
        0x18: 'line_color', # VDI 17
        0x19: 'text_color', # Set a global
        0x1a: 'fill_color', # VDI 25
        0x1b: 'set_coll_color',
        0x1c: ('copy_opaque(psrc,pdst,vrmode,srcx1,srcx2,srcy1,srcy2,dstx1,dstx2,dsty1,dsty2)', 11, 0), # VDI 109
        0x1d: ('copy_trans(psrc,pdst,fgcolor,bgcolor,writemode,srcx1,srcx2,srcy1,srcy2,dstx1,dstx2,dsty1,dsty2)', 13, 0), # Draw black and white raster gfx VDI 121
        0x1e: 'get_mouse(addrx,addry)', # VDI 124
        0x1f: 'button', # VDI 124 (mouse button 0/1 passed in)
        0x20: 'draw_icon(idx,vrmode,x,y)', # calls 0x1c
        0x21: 'draw_char', # set writing mode, draw b/w
        0x22: 'draw_x_char', # calls DrawBW
        0x23: 'no_clip', # similar to 0x0f
        0x24: 'move_screen',
        0x25: 'restore_params',
        0x26: 'curse_on',
        0x27: 'curse_off',
        0x28: ('collide(pattern,x,y): integer', 4, 1),
        0x29: ('do_sprite(flag,back_addr,x,y,pattern,color)', 6, 0),
        0x2a: ('sprite_state(flag)', 1, 0),
        0x2b: ('birth_sprite(x,y,pattern,color,back,idx)', 6, 0), # 
        0x2c: ('attach_sprite(flag)', 1, 0),
        0x2d: 'move_sprite',
        0x2e: 'halt_sprite',
        0x2f: 'kill_sprite',
        0x30: 'draw_sprite',
    },
}
